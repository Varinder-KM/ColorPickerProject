{"version":3,"sources":["components/HeaderComponent.js","components/CustomPickerComponent.js","components/RGBAColorPickerComponent.js","components/HexToRGBAComponent.js","components/RGBAToHexComponent.js","components/RendomColorGenretorComponent.js","components/GraidentComponet.js","redux/ActionType.js","redux/ActionCreator.js","components/MainComponent.js","shared/rgbAndrgba.js","redux/hex2rgba.js","shared/hexAndrgba.js","redux/rgbaTohex.js","shared/random.js","redux/randomGenerator.js","App.js","redux/ConfigurStorage.js","reportWebVitals.js","index.js"],"names":["Header","props","toggleNav","bind","state","isOpen","this","setState","id","style","background","expand","onClick","class","color","className","to","navbar","fontSize","Component","require","Saturation","Hue","Alpha","MyPicker","CustomPointer2","width","height","border","borderRadius","position","top","boxShadow","pointer","display","CustomPicker","RGBAPicker","rValue","gValue","bValue","aValue","handleChange","handleColorChange","handlePreview","copyClipBord","toggle","hex","rgb","r","g","b","a","document","getElementById","innerHTML","event","target","name","value","tx","textContent","navigator","clipboard","writeText","then","alert","preview","outline","fontWeight","textAlign","placement","htmlFor","type","md","min","max","size","onChange","e","step","React","HexToRGBA","_handleKeyDown","key","Convertor","textbold","textalign","boxborder","padding","minHeight","onKeyDown","Rgb","Rgba","borderBottom","RGBAToHex","handleSubmit","R2Hred","R2Hgreen","R2Hblue","R2Halpha","preventDefault","onSubmit","innerRef","input","Hex","RendomColorGenerator","RandomColors","Generat","hexa","striped","responsive","scope","rgba","hsl","hsla","brightness","luminance","Graident","color1","color2","angle","generateColor","getAngle","setColorsAndAngle","c1","c2","angl","toString","Math","floor","random","toFixed","join","paddingTop","marginTop","cursor","margin","RGBATOHex","ColorGenerat","hexToRgba","rbgaConvertor","colorinterpreter","ConvertHexToRgba","dispatch","test","c","length","substring","rbga","split","rgbfilter","hexToRgb","hexTorgb","HexConvetor","convertedHex","ActionType","payload","RgbaConvertor","convertedrgba","addnewColors","generatedColors","Main","path","component","console","log","rendomcolors","rgbandrgba","hexAndrgba","ConvertRgbaToHex","generator","window","location","href","withRouter","connect","rgbAndrgba","red","green","blue","alpha","parseInt","parseFloat","Color","toHEX","toHEXA","toRGB","toRGBA","toHSL","toHSLA","RGBandRGBA","action","HEXANDRGBA","RandomColor","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8eafa613.chunk.js","sourcesContent":["import React ,{Component} from \"react\";\r\nimport { Collapse,Navbar,Nav,NavItem, NavbarToggler, NavbarBrand } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nclass Header extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n\r\n        this.state={\r\n            isOpen : false\r\n        };\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isOpen : !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n          <div id=\"NavContainer\">\r\n            <Navbar style={{background:'#FFFFFF'}} expand=\"md\">\r\n              <NavbarToggler onClick={this.toggleNav}>\r\n                <i class=\"fa fa-bars\" style={{color:'#E2E8F0'}} aria-hidden=\"true\"></i>\r\n              </NavbarToggler>\r\n              <NavbarBrand>\r\n                <NavLink className=\"nav-link\" to='/rgbaPicker'> RGBA Color Picker</NavLink>\r\n              </NavbarBrand>\r\n              <Collapse isOpen={this.state.isOpen} navbar>\r\n                <Nav className=\"m-auto\" navbar style={{fontSize:\"10px\"}}>\r\n                  <NavItem className=\"mr-5\">\r\n                    <NavLink className=\"nav-link\" to='/hex2rgba'> Hex to RGBA</NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mr-5\">\r\n                    <NavLink className=\"nav-link\" to='/rgba2hex'> RGBA to Hex</NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mr-5\">\r\n                    <NavLink className=\"nav-link\" to='/generator'> Rendom Color Generator </NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mr-5\">\r\n                    <NavLink className=\"nav-link\" to='/graident'> Rendom Graident </NavLink>\r\n                  </NavItem>\r\n                  <NavItem className=\"mr-5\">\r\n                    <NavLink className=\"nav-link\" to='/imageColor'> Image Color Picker </NavLink>\r\n                  </NavItem>\r\n                </Nav>\r\n              </Collapse>\r\n            </Navbar>\r\n          </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default Header;","import { CustomPicker } from \"react-color\";\r\nimport React,{Component} from \"react\";\r\nconst {Saturation,Hue,Alpha} = require('react-color/lib/components/common');\r\n\r\nclass MyPicker extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        const CustomPointer1 =()=>{\r\n            return(\r\n                <div style={{\r\n                    width:\"20px\",\r\n                    height:'20px',\r\n                    border:\"3px solid #FFFFFF\",\r\n                    borderRadius:'5px'\r\n\r\n                }}>\r\n\r\n                </div>\r\n            );\r\n        }\r\n        const CustomPointer2 =()=>{\r\n            return(\r\n                <div style={{\r\n                    width:\"10px\",\r\n                    height:'30px',\r\n                    border:\"3px solid #FFFFFF\",\r\n                    borderRadius:'5px',\r\n                    position:'relative',\r\n                    background:'#FFFFFF',\r\n                    top:'-5px',\r\n                    boxShadow:'0 0 5px #000'\r\n\r\n                }}>\r\n\r\n                </div>\r\n            );\r\n        }\r\n     \r\n        return(\r\n            <div className=\"row\">\r\n                <div className=\"col-11 ml-auto mr-auto mt-2 \"\r\n                style={{\r\n                    height:'40vh'\r\n                }}>\r\n                    <Saturation\r\n                    {...this.props}\r\n                    pointer={CustomPointer1}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                style={{\r\n                    height:'20px',\r\n                    display:'relative',\r\n                \r\n                }} className='col-10 ml-auto mr-auto mt-2 '>\r\n                    <Hue \r\n                    {...this.props}\r\n                    pointer={CustomPointer2}\r\n                    />\r\n                </div>\r\n\r\n                <div\r\n                style={{\r\n                    height:'20px',\r\n                    display:'relative',\r\n                    boxShadow:'0 0 5px rgba(81,80,80,0.43)'\r\n                }} className='col-10 ml-auto mr-auto mt-2 mb-2'>\r\n\r\n                    <Alpha \r\n                    {...this.props}\r\n                    pointer={CustomPointer2}\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CustomPicker(MyPicker);","import React from \"react\";\r\nimport {Input, Label, Col ,Row,Form, Tooltip} from \"reactstrap\";\r\nimport \"react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css\";\r\nimport RangeSlider from \"react-bootstrap-range-slider\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport MyPicker from \"./CustomPickerComponent\"\r\n\r\nclass RGBAPicker extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            rValue : 255,\r\n            gValue : 255,\r\n            bValue : 255,\r\n            aValue : 1,\r\n            background : '#fff',\r\n            isOpen : false,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleColorChange = this.handleColorChange.bind(this);\r\n        this.handlePreview = this.handlePreview.bind(this);\r\n        this.copyClipBord = this.copyClipBord.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    handleColorChange(color){\r\n        this.setState({\r\n            background : color.hex ,\r\n            rValue : color.rgb.r,\r\n            gValue : color.rgb.g,\r\n            bValue : color.rgb.b,\r\n            aValue : color.rgb.a,\r\n        });\r\n        this.handlePreview();\r\n    }\r\n\r\n    handlePreview(){\r\n        var colorCode = document.getElementById('code');\r\n        colorCode.innerHTML = `rgba(${this.state.rValue},${this.state.gValue},${this.state.bValue},${this.state.aValue})`;\r\n    }\r\n\r\n    handleChange(event){\r\n        var target = event.target;\r\n        var name = target.name;\r\n\r\n        this.setState({\r\n            [name] : target.value,\r\n            background : `rgba(${this.state.rValue},${this.state.gValue},${this.state.bValue},${this.state.aValue})`\r\n        });\r\n        this.handlePreview();\r\n    }\r\n\r\n    toggle(){\r\n        this.setState({\r\n            isOpen : !this.state.isOpen\r\n        })\r\n    }\r\n   \r\n    copyClipBord(){\r\n        var clip = document.getElementById('code');\r\n        let tx = clip.textContent;\r\n       navigator.clipboard.writeText(tx).then(()=>{\r\n           alert(\"Copyed SuccessFully\");\r\n       },() =>{\r\n        alert(\"clipbord write Failed\");\r\n       })\r\n       \r\n    }\r\n\r\n    render(){\r\n        const preview = {\r\n            background : this.state.background,\r\n            height:'240px',\r\n            outline:`1px solid ${this.state.background}`,\r\n            borderRadius: '5px',\r\n            boxShadow: `0 0 5px #CBD5E1`,\r\n        }\r\n        const style={\r\n            fontWeight:\"800\",\r\n            fontSize:\"18px\",\r\n            textAlign:'right',\r\n        }\r\n        const rangeSlider = {\r\n            thumb:{\r\n              height: \"45px\",\r\n              width : \"15px\",\r\n              background : \"#FFFFFF\",\r\n              border : \"1px solid rgb(224, 224, 224)\",\r\n              cursor : \"pointer\",\r\n              borderadius : \"5px\"\r\n            },\r\n            silder: {\r\n              height: \"28px\"\r\n            },\r\n            red: {\r\n              background: '#FF3F3F'\r\n            },\r\n            green: {\r\n              background: '#3FFF7F'\r\n            },\r\n            blue: {\r\n              background: '#007FFF'\r\n            },\r\n            alpha: {\r\n              background: `linear-gradient(90deg, #FCFCFC , #020202)`\r\n            }\r\n        }\r\n\r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"space\"></div>\r\n            <div className=\"row\">\r\n              <p className=\"col-10 col-sm-6 ml-auto \" id=\"code\" style={style}>\r\n                rgba(255,255,255,1)\r\n              </p>\r\n\r\n              <span\r\n                className=\"fa fa-clipboard fa-lg col-2 col-sm-6 mt-1 clipbord\"\r\n                id=\"toolInfo\"\r\n                aria-hidden=\"true\"\r\n                onClick={this.copyClipBord}\r\n                style={{ textAlign: \"left\" }}\r\n              ></span>\r\n\r\n              <Tooltip\r\n                placement=\"right\"\r\n                target=\"toolInfo\"\r\n                isOpen={this.state.isOpen}\r\n                toggle={this.toggle}\r\n              >\r\n                Copy to Clipbord\r\n              </Tooltip>\r\n            </div>\r\n\r\n            <div className=\"row controls\">\r\n              <span\r\n                className=\"col-8 col-sm-4 ml-5 ml-sm-auto preview\"\r\n                style={preview}\r\n              ></span>\r\n\r\n              <div className=\"col-12 col-md-6  mr-sm-auto\">\r\n                <Form>\r\n                  {/* Red Color */}\r\n\r\n                  <Row className=\"form-group mt-2\">\r\n                    <Label htmlFor=\"red\" className=\"col-2 mt-2\">\r\n                      <h5> R </h5>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"col-3 input col-sm-2\"\r\n                      type=\"text\"\r\n                      name=\"red\"\r\n                      id=\"red\"\r\n                      value={this.state.rValue}\r\n                    ></Input>\r\n                    <Col md={6} className=\"col-6 col-sm-6\">\r\n                      <RangeSlider\r\n                        name=\"rValue\"\r\n                        value={this.state.rValue}\r\n                        min={0}\r\n                        max={255}\r\n                        size=\"lg\"\r\n                        id=\"redSlider\"\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* Green Color */}\r\n                  <Row className=\"form-group mt-2\">\r\n                    <Label htmlFor=\"green\" className=\"col-2 mt-2\">\r\n                      <h5> G </h5>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"col-3 input col-sm-2\"\r\n                      type=\"text\"\r\n                      name=\"green\"\r\n                      id=\"green\"\r\n                      value={this.state.gValue}\r\n                    ></Input>\r\n                    <Col md={6} className=\"col-6 col-sm-6\">\r\n                      <RangeSlider\r\n                        name=\"gValue\"\r\n                        value={this.state.gValue}\r\n                        min={0}\r\n                        max={255}\r\n                        size=\"lg\"\r\n                        id=\"greenSlider\"\r\n                        onChange={(e) => this.handleChange(e)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* Blue Color */}\r\n                  <Row className=\"form-group mt-2\">\r\n                    <Label htmlFor=\"blue\" className=\"col-2 mt-2\">\r\n                      <h5> B </h5>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"col-3 input col-sm-2\"\r\n                      type=\"text\"\r\n                      name=\"blue\"\r\n                      id=\"blue\"\r\n                      value={this.state.bValue}\r\n                    ></Input>\r\n                    <Col md={6} className=\"col-6 col-sm-6\">\r\n                      <RangeSlider\r\n                        name=\"bValue\"\r\n                        value={this.state.bValue}\r\n                        min={0}\r\n                        max={255}\r\n                        size=\"lg\"\r\n                        id=\"blueSlider\"\r\n                        onChange={(e) => this.handleChange(e)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n\r\n                  {/* alpha Color */}\r\n                  <Row className=\"form-group mt-2\">\r\n                    <Label htmlFor=\"alpha\" className=\"col-2 mt-2\">\r\n                      <h5> A </h5>\r\n                    </Label>\r\n                    <Input\r\n                      className=\"col-3 input col-sm-2\"\r\n                      type=\"text\"\r\n                      name=\"alpha\"\r\n                      id=\"alpha\"\r\n                      value={this.state.aValue}\r\n                    ></Input>\r\n                    <Col md={6} className=\"col-6 col-sm-6\">\r\n                      <RangeSlider\r\n                        name=\"aValue\"\r\n                        value={this.state.aValue}\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.01}\r\n                        size=\"lg\"\r\n                        id=\"alphaSlider\"\r\n                        onChange={(e) => this.handleChange(e)}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mt-4\"></div>\r\n              <div className=\"col-6  m-auto\" style={{\r\n                boxShadow:'0 0 10px rgba(205,202,202,1)',\r\n                borderRadius:'10px'\r\n                }}>\r\n                <MyPicker \r\n                color={this.state.background}\r\n                onChange={this.handleColorChange}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n \r\n  \r\n};\r\n\r\nexport default RGBAPicker;\r\n","import React, { useState } from \"react\";\r\nimport { FormGroup, Input, Label} from \"reactstrap\";\r\n\r\n\r\nclass HexToRGBA extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hex :''\r\n        }\r\n    \r\n        this._handleKeyDown = this._handleKeyDown.bind(this);\r\n    }\r\n\r\n    _handleKeyDown(event) {\r\n      if(event.key === 'Enter'){\r\n        this.props.Convertor(event.target.value);\r\n      }\r\n     }\r\n \r\n    render(){\r\n        const style={\r\n            textbold:{\r\n                textAlign:'center',\r\n                fontWeight:'500',\r\n                fontSize:'18px'\r\n            },\r\n            textalign:{\r\n                textAlign:'center'\r\n            },\r\n            boxborder:{\r\n                border:'1px solid #E2E8F0',\r\n                borderRadius:'5px',\r\n                padding:'5px'            \r\n            }\r\n        }\r\n        return (\r\n          <div className=\"container\" style={{ minHeight: \"100vh\" }}>\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mt-5\"></div>\r\n              <p className=\"col-12\" style={style.textbold}>\r\n                Hex To RGBA Converter\r\n              </p>\r\n    \r\n              <div className=\"col-12 mt-4\"></div>\r\n              <FormGroup className=\"col-7 m-auto row\">\r\n                <Label\r\n                  className=\"col-5\"\r\n                  htmlFor=\"hex\"\r\n                  style={{ textAlign: \"right\" }}\r\n                >\r\n                  Hex\r\n                </Label>\r\n                <Input\r\n                  className=\"col-7 input col-sm-2 \"\r\n                  id=\"hex\"\r\n                  name=\"hex\"\r\n                  type=\"text\"\r\n                  onKeyDown={this._handleKeyDown}\r\n                />\r\n              </FormGroup>\r\n    \r\n              <div className=\"col-12\" style={{ height: \"30vh\" }}></div>\r\n    \r\n              <div className=\"col-10 m-auto row\" style={style.boxborder}>\r\n                <p className=\"col-12 mt-5\" style={style.textbold}>\r\n                  CONVERTED\r\n                </p>\r\n    \r\n                {/* Converted Values */}\r\n                <p className=\"col-12 \" style={style.textalign}>\r\n                  {this.props.Rgb}\r\n                </p>\r\n                <p className=\"col-12 \" style={style.textalign}>\r\n                  {this.props.Rgba}\r\n                </p>\r\n    \r\n                <span\r\n                  className=\"col-10 m-auto\"\r\n                  style={{ borderBottom: \"1px solid #E2E8F0\" }}\r\n                ></span>\r\n                <div className=\"col-12 mt-5\"></div>\r\n                <p className=\"col-12 \" style={style.textbold}>\r\n                  PREVIEW\r\n                </p>\r\n                <span\r\n                  className=\"col-5 col-md-2 m-sm-auto m-auto\"\r\n                  style={{ background: this.props.Rgba, height: \"100px\", borderRadius: \"5px\" }}\r\n                ></span>\r\n                <div className=\"col-12 mt-5\"></div>\r\n              </div>\r\n    \r\n              <div className=\"col-12 mt-5\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default HexToRGBA;","import React from \"react\";\r\nimport { FormGroup, Input, Label, Button, Form} from \"reactstrap\";\r\n\r\nclass RGBAToHex extends React.Component{\r\n\r\n     constructor(props) {\r\n         super(props);\r\n         this.state = {\r\n\r\n         }\r\n         this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(event){\r\n        \r\n        this.props.Convertor(this.R2Hred.value, this.R2Hgreen.value, this.R2Hblue.value, this.R2Halpha.value);\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render(props){\r\n        const style={\r\n            textbold:{\r\n                textAlign:'center',\r\n                fontWeight:'500',\r\n                fontSize:'18px'\r\n            },\r\n            textalign:{\r\n                textAlign:'center'\r\n            },\r\n            boxborder:{\r\n                border:'1px solid #E2E8F0',\r\n                borderRadius:'5px',\r\n                padding:'5px'            \r\n            }\r\n        }\r\n        return (\r\n          <div\r\n            className=\"container\"\r\n            style={{ minHeight: \"100vh\", padding: \"5px\" }}\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mt-5\"></div>\r\n              <p className=\"col-12\" style={style.textbold}>\r\n                RGBA to Hex Converter\r\n              </p>\r\n\r\n              <div className=\"col-12 mt-4\"></div>\r\n\r\n              {/* Color Form Start */}\r\n              <Form className=\"col-12 row\" onSubmit={this.handleSubmit}>\r\n                <FormGroup className=\"col-12 col-sm-3 ml-sm-auto row\">\r\n                  <Label\r\n                    className=\"col-5 mt-1\"\r\n                    htmlFor=\"R2Hred\"\r\n                    style={{ textAlign: \"right\", fontWeight: 600 }}\r\n                  >\r\n                    R\r\n                  </Label>\r\n                  <Input\r\n                    className=\"col-5 input col-sm-5 \"\r\n                    id=\"R2Hred\"\r\n                    name=\"R2Hred\"\r\n                    type=\"text\"\r\n                    innerRef={(input) => this.R2Hred = input}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\" col-12 col-sm-3 row\">\r\n                  <Label\r\n                    className=\"col-5 mt-1\"\r\n                    htmlFor=\"R2Hgreen\"\r\n                    style={{ textAlign: \"right\", fontWeight: 600 }}\r\n                  >\r\n                    G\r\n                  </Label>\r\n                  <Input\r\n                    className=\"col-5 input col-sm-5 \"\r\n                    id=\"R2Hgreen\"\r\n                    name=\"R2Hgreen\"\r\n                    type=\"text\"\r\n                    innerRef={(input) => this.R2Hgreen = input}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"col-12 col-sm-3 row\">\r\n                  <Label\r\n                    className=\"col-5 mt-1\"\r\n                    htmlFor=\"R2Hblue\"\r\n                    style={{ textAlign: \"right\", fontWeight: 600 }}\r\n                  >\r\n                    B\r\n                  </Label>\r\n                  <Input\r\n                    className=\"col-5 input col-sm-5 \"\r\n                    id=\"R2Hblue\"\r\n                    name=\"R2Hblue\"\r\n                    type=\"text\"\r\n                    innerRef={(input) => this.R2Hblue = input}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup className=\"col-12 col-sm-3 row\">\r\n                  <Label\r\n                    className=\"col-5  mt-1\"\r\n                    htmlFor=\"R2Halpha\"\r\n                    style={{ textAlign: \"right\", fontWeight: 600 }}\r\n                  >\r\n                    A\r\n                  </Label>\r\n                  <Input\r\n                    className=\"col-5 input col-sm-5 \"\r\n                    id=\"R2Halpha\"\r\n                    name=\"R2Halpha\"\r\n                    type=\"text\"\r\n                    innerRef={(input) => this.R2Halpha = input}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <div className=\"col-12\" style={{ height: \"10vh\" }}></div>\r\n                <Button\r\n                  className=\"col-8 col-sm-3 m-auto\"\r\n                  type=\"submit\"\r\n                  id=\"submit\"\r\n                  color=\"primary\"\r\n                >\r\n                  Converter\r\n                </Button>\r\n              </Form>\r\n              {/* Color Form End */}\r\n\r\n              <div className=\"col-12\" style={{ height: \"15vh\" }}></div>\r\n              <FormGroup className=\"col-12 row\">\r\n                <Label\r\n                  className=\"col-4 mt-1\"\r\n                  htmlFor=\"R2Halpha\"\r\n                  style={{ textAlign: \"right\", fontWeight: 600 }}\r\n                >\r\n                  RGBA\r\n                </Label>\r\n                <Input\r\n                  className=\"col-8 col-sm-5 input  \"\r\n                  id=\"R2Halpha\"\r\n                  name=\"R2Halpha\"\r\n                  type=\"text\"\r\n                  value={this.props.Rgba}\r\n                />\r\n              </FormGroup>\r\n\r\n\r\n              <div className=\"col-12\" style={{ height: \"15vh\" }}></div>\r\n\r\n              <div className=\"col-10 m-auto row\" style={style.boxborder}>\r\n                <p className=\"col-12 mt-5\" style={style.textbold}>\r\n                  CONVERTED\r\n                </p>\r\n                <p className=\"col-12 \" style={style.textalign}>\r\n                  {this.props.Hex}\r\n                </p>\r\n\r\n                <span\r\n                  className=\"col-10 m-auto\"\r\n                  style={{ borderBottom: \"1px solid #E2E8F0\" }}\r\n                ></span>\r\n\r\n                <div className=\"col-12 mt-5\"></div>\r\n                <p className=\"col-12 \" style={style.textbold}>\r\n                  PREVIEW\r\n                </p>\r\n                <span\r\n                  className=\"col-5 col-md-2 m-sm-auto m-auto\"\r\n                  style={{\r\n                    background: this.props.Hex,\r\n                    height: \"100px\",\r\n                    borderRadius: \"5px\",\r\n                  }}\r\n                ></span>\r\n                <div className=\"col-12 mt-5\"></div>\r\n              </div>\r\n\r\n              <div className=\"col-12 mt-5\"></div>\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RGBAToHex;","import React from \"react\";\r\nimport { Button, Table } from \"reactstrap\";\r\n\r\nconst RendomColorGenerator = ({RandomColors,Generat}) =>{\r\n    const style={\r\n        textbold:{\r\n            textAlign:'center',\r\n            fontWeight:'600',\r\n            fontSize:'22px'\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\" style={{minHeight:'100vh'}}>\r\n            <div className=\"row\">\r\n            <div className=\"col-12 mt-5\"></div>\r\n                <p className=\"col-12\" style={style.textbold}>Random Color Generator</p>\r\n                <div className=\"col-12 mt-4\"></div>\r\n\r\n                <div className=\"col-12 col-md-4 ml-auto row\" >\r\n\r\n                    <div className='col-8 col-md-10' id=\"previewBox\" style={{background:RandomColors.hexa}}></div>\r\n                    <Button className='col-5' id='generatorBtn' color=\"primary\" onClick={Generat}>Generate</Button>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-md-7 \">\r\n                    <Table striped responsive id=\"table\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <th scope=\"row\">HEX</th>\r\n                                <td>{RandomColors.hex}</td>\r\n                                 <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">HEXA</th>\r\n                                <td>{RandomColors.hexa}</td>\r\n                                 <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">RGB</th>\r\n                                <td>{RandomColors.rgb}</td>\r\n                                <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">RGBA</th>\r\n                                <td>{RandomColors.rgba}</td>\r\n                                 <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">HSL</th>\r\n                                <td>{RandomColors.hsl}</td>\r\n                                 <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">HSLA</th>\r\n                                <td>{RandomColors.hsla}</td>\r\n                                <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Brightness</th>\r\n                                <td>{RandomColors.brightness}</td>\r\n                                <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <th scope=\"row\">Luminance</th>\r\n                                <td>{RandomColors.luminance}</td>\r\n                                <td>\r\n                                    <span\r\n                                        className=\"fa fa-files-o fa-lg clipbord\"\r\n                                        aria-hidden=\"true\"\r\n                                        >\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RendomColorGenerator;","import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nclass Graident extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state ={\r\n            color1 : '#0c3d7d',\r\n            color2 : '#0c3d7d',\r\n            angle: '90deg'\r\n        }\r\n\r\n        this.generateColor = this.generateColor.bind(this);\r\n        this.getAngle  = this.getAngle.bind(this);\r\n        this.setColorsAndAngle = this.setColorsAndAngle.bind(this);\r\n    }\r\n\r\n    setColorsAndAngle(){\r\n        var c1, c2,angl;\r\n        c1 = this.generateColor();\r\n        c2 = this.generateColor();\r\n        angl = this.getAngle().toString()+ \"deg\";\r\n\r\n        this.setState({\r\n            color1:c1,\r\n            color2 : c2,\r\n            angle : angl\r\n          \r\n        })\r\n    }\r\n\r\n\r\n    generateColor(){\r\n        let r,g,b,a,rgba;\r\n\r\n        r = Math.floor((Math.random()*255)+1);\r\n        g = Math.floor((Math.random()*255)+1);\r\n        b = Math.floor((Math.random()*255)+1);\r\n        a = (Math.random()*1).toFixed(2);\r\n\r\n        rgba = 'rgba('+[r,g,b,a].join(',')+ ')';\r\n\r\n        return rgba;\r\n    }\r\n\r\n    getAngle(){\r\n        var angle;\r\n        angle = Math.floor((Math.random()*360)+1);\r\n        return angle;\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div style={{height:\"50vh\" , paddingTop:\"10px\"}}>\r\n                <div style={{\r\n                    background:`linear-gradient(${this.state.angle},${this.state.color1},${this.state.color2})`,\r\n                    height:\"80vh\",\r\n                    width:\"100%\",\r\n                    boxShadow:\"0 0 5px rgba(187,187,187,1)\"\r\n                }}>\r\n                </div> \r\n                <p style={{marginTop:\"5px\"}}>({this.state.angle},{this.state.color1},{this.state.color2})</p>\r\n                <Button onClick={() =>this.setColorsAndAngle()} style={{cursor:\"pointer\", margin:\"10px\"}}>Generat</Button>               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Graident;","export const HexToRGBA = 'HEX_TO_RGBA';\r\nexport const RGBATOHex = 'RGBA_TO_HEX';\r\nexport const ColorGenerat = 'COLOR_GENERATE';","import * as ActionType from './ActionType';\r\nimport { hexToRgb } from 'rgba-to-hex-colors';\r\nconst hexToRgba  = require(\"hex-to-rgba\");\r\nconst rbgaConvertor = require(\"hex-color-converter\");\r\nconst colorinterpreter = require(\"colorinterpreter\");\r\n\r\n\r\n// hexToRgba Convertion\r\nexport const ConvertHexToRgba = (hex) => (dispatch) =>{\r\n    var rgb, rgba;\r\n\r\n    if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex) || /^#([A-Fa-f0-9]{2}){2,4}$/.test(hex) ){\r\n            \r\n         rgb = hexTorgb(hex);\r\n         rgba = hexToRgba(hex);\r\n\r\n        dispatch(HexConvetor({rgb, rgba}));\r\n    }else{\r\n         rgb = 'Invalid Input';\r\n         rgba = 'Invalid Input';\r\n\r\n        dispatch(HexConvetor({rgb, rgba}));\r\n    }\r\n}\r\n\r\nconst HexConvetor = (convertedHex) =>{\r\n    return ({\r\n        type : ActionType.HexToRGBA,\r\n        payload : convertedHex\r\n    })\r\n}\r\n\r\nfunction hexTorgb(hex){\r\n    var c;\r\n    if(hex.length == 9){\r\n        c = hex.substring(0,7);\r\n    }else{\r\n        c=hex;\r\n    }\r\n    return rgbfilter(hexToRgb(c));\r\n}\r\n\r\nfunction rgbfilter(rbga){\r\n    var c,rgb;\r\n    c = rbga.substring(5).split(',');\r\n\r\n    rgb = 'rbg(' + c[0] +','+ c[1] + ','+ c[2]+ ')'; \r\n    return rgb;\r\n}\r\n\r\n// rgbaToHex Convertion\r\n\r\nexport const ConvertRgbaToHex = (red, green, blue, alpha) => (dispatch) =>{\r\n    var r,g,b,a,sum,rgba,hex;\r\n    r = parseInt(red);\r\n    g = parseInt(green);\r\n    b = parseInt(blue);\r\n    a = parseFloat(alpha);\r\n    sum = r+g+b+a;\r\n   \r\n    if(sum <= 766){\r\n        console.log('Its Also enter in if statement and the values are');\r\n        rgba = 'rgba('+ red + ', '+ green + ', '+ blue + ', '+ alpha + ')';\r\n        hex = rbgaConvertor(rgba);\r\n        dispatch(RgbaConvertor({hex, rgba}));\r\n    }\r\n    else{\r\n        rgba = 'Invalid Input'\r\n        hex = 'Invalid Input'\r\n\r\n        dispatch(RgbaConvertor({hex, rgba}));\r\n    }\r\n\r\n}\r\n\r\nconst RgbaConvertor = (convertedrgba) =>{\r\n    return ({\r\n        type : ActionType.RGBATOHex,\r\n        payload : convertedrgba\r\n    })\r\n}\r\n\r\n// RandomColorGenerator\r\nexport const generator = () => (dispatch) =>{\r\n    var r,g,b,a, rba;\r\n    var hex,hexa,rgb,rgba,hsl,hsla,brightness,luminance;\r\n    var color = colorinterpreter.Color;\r\n    r = Math.floor((Math.random()*255)+1);\r\n    g = Math.floor((Math.random()*255)+1);\r\n    b = Math.floor((Math.random()*255)+1);\r\n    a = (Math.random()*1).toFixed(2);\r\n\r\n    rba = 'rgba('+[r,g,b,a].join(',')+ ')';\r\n\r\n    var random = new color(rba);\r\n\r\n     hex  =  random.toHEX();\r\n     hexa =  random.toHEXA();         \r\n     rgb  =  random.toRGB();         \r\n     rgba =  random.toRGBA();          \r\n     hsl  =  random.toHSL();               \r\n     hsla =  random.toHSLA(); \r\n     brightness = random.brightness();\r\n     luminance = random.luminance();\r\n\r\n    dispatch(addnewColors({\r\n       hex,hexa,rgb,rgba,hsl,hsla,brightness,luminance\r\n    }));\r\n}\r\n\r\nconst addnewColors = (generatedColors) =>{\r\n    return ({\r\n        type : ActionType.ColorGenerat,\r\n        payload : generatedColors\r\n    });\r\n}","import React,{Component} from \"react\";\r\nimport Header from \"./HeaderComponent\";\r\nimport './style.css';\r\nimport RGBAPicker from \"./RGBAColorPickerComponent\";\r\nimport HexToRGBA from \"./HexToRGBAComponent\";\r\nimport RGBAToHex from \"./RGBAToHexComponent\";\r\nimport RendomColorGenerator from \"./RendomColorGenretorComponent\";\r\nimport Graident from \"./GraidentComponet\";\r\nimport {Switch,Route,Redirect,withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {ConvertHexToRgba, ConvertRgbaToHex,generator} from '../redux/ActionCreator';\r\n\r\nconst mapStateToProps = state => {\r\n    return{\r\n        rgbandrgba : state.rgbAndrgba,\r\n        hexAndrgba : state.hexAndrgba,\r\n        rendomcolors: state.rendomcolors,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    ConvertHexToRgba : (hex) => dispatch(ConvertHexToRgba(hex)),\r\n    ConvertRgbaToHex : (red, green, blue, alpha) => dispatch(ConvertRgbaToHex(red, green, blue, alpha)),\r\n    generator : () => dispatch(generator()),\r\n});\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n\r\n        };\r\n\r\n        \r\n    }\r\n    \r\n    render(){\r\n\r\n        const RGBAPickerPage = () =>{\r\n            console.log(this.props.rendomcolors);\r\n            return(\r\n                <RGBAPicker />\r\n               \r\n            );\r\n        }\r\n\r\n        return(\r\n            <div className=\"main-body\">\r\n                <Header/>\r\n\r\n                <Switch>\r\n                 <Route path='/rgbaPicker' component={RGBAPickerPage} />\r\n                 <Route path='/hex2rgba' component={() =><HexToRGBA Rgb = {this.props.rgbandrgba.rgb} \r\n                  Rgba = {this.props.rgbandrgba.rgba} Convertor={this.props.ConvertHexToRgba} />} />\r\n                \r\n                 <Route path='/rgba2hex' component={() =><RGBAToHex\r\n                  Hex={this.props.hexAndrgba.hex} Rgba={this.props.hexAndrgba.rgba} Convertor={this.props.ConvertRgbaToHex}/>} />\r\n                \r\n                 <Route path='/generator' component={() =><RendomColorGenerator\r\n                  RandomColors={this.props.rendomcolors} Generat= {this.props.generator} />}/>\r\n\r\n                  <Route path=\"/graident\" component={() => <Graident />} />\r\n\r\n                  <Route path=\"/imageColor\" component={() =>window.location.href = \"index2.html\"} />\r\n                  \r\n                 <Redirect to='/rgbaPicker' />\r\n                </Switch>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","const RGBandRGBA = { rgb : 'rgb(127,17,224)' , rgba : 'rgba(127,17,224,1)'};\r\n\r\nexport default RGBandRGBA;","import RGBandRGBA from '../shared/rgbAndrgba';\r\nimport * as ActionType from './ActionType';\r\n\r\nexport const rgbAndrgba = (state = {\r\n    rgb : RGBandRGBA.rgb,\r\n    rgba : RGBandRGBA.rgba}, action) =>{\r\n\r\n    switch(action.type){\r\n        case ActionType.HexToRGBA:\r\n            return {...state, rgb : action.payload.rgb, rgba : action.payload.rgba}\r\n       \r\n        default : \r\n        return state;\r\n    }\r\n}","const HEXANDRGBA = {hex : '#43ff64d9' , rgba : 'rgba(67, 255, 100, 0.85)'};\r\n\r\nexport default HEXANDRGBA;","import * as ActionType from './ActionType';\r\nimport HEXANDRGBA from '../shared/hexAndrgba';\r\n\r\nexport const hexAndrgba = (state = {\r\n    hex : HEXANDRGBA.hex,\r\n    rgba : HEXANDRGBA.rgba}, action) =>{\r\n        \r\n    switch(action.type){\r\n        case ActionType.RGBATOHex:\r\n            return {...state, hex : action.payload.hex, rgba : action.payload.rgba}\r\n\r\n        default :\r\n        return state;\r\n    }\r\n}\r\n","const RandomColor = {\r\n  hex: \"#8E50B3\",\r\n  hexa: \"#8E50B3FF\",\r\n  rgb: \"rgb(142, 80, 179)\",\r\n  rgba: \"rgb(142, 80, 179, 1)\",\r\n  hsl: \"hsl(277.58,39.44%,50.78%)\",\r\n  hsla: \"hsl(277.58,39.44%,50.78%,1)\",\r\n  brightness: \"109.824\",\r\n  luminance: \"0.14742777937920526\",\r\n};\r\n\r\nexport default RandomColor;\r\n","import * as ActionType from \"./ActionType\";\r\nimport RandomColor from \"../shared/random\";\r\n\r\nexport const rendomcolors = (\r\n  state = {\r\n    hex: RandomColor.hex,\r\n    hexa: RandomColor.hexa,\r\n    rgb: RandomColor.rgb,\r\n    rgba: RandomColor.rgba,\r\n    hsl: RandomColor.hsl,\r\n    hsla: RandomColor.hsla,\r\n    brightness: RandomColor.brightness,\r\n    luminance: RandomColor.luminance,\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionType.ColorGenerat:\r\n      return {...state, hex : action.payload.hex, hexa : action.payload.hexa, rgb : action.payload.rgb, rgba : action.payload.rgba,\r\n      hsl : action.payload.hsl, hsla : action.payload.hsla, brightness : action.payload.brightness, luminance : action.payload.luminance};\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\nimport Main from './components/MainComponent';\nimport 'font-awesome/css/font-awesome.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStorage} from './redux/ConfigurStorage';\n\nconst store = ConfigureStorage();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter>\n        <div className=\"App\">\n          <Main />\n        </div>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { createStore , combineReducers,applyMiddleware} from \"redux\";\r\nimport {rgbAndrgba} from './hex2rgba';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {hexAndrgba} from './rgbaTohex';\r\nimport {rendomcolors} from './randomGenerator';\r\n\r\nexport const ConfigureStorage = () =>{\r\n    const stage = createStore(\r\n        combineReducers({\r\n            rgbAndrgba : rgbAndrgba,\r\n            hexAndrgba : hexAndrgba,\r\n            rendomcolors:rendomcolors,\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return stage;\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}