{"version":3,"sources":["classComponent.js","App.js","reportWebVitals.js","index.js"],"names":["DemoClass","props","getColors","colors","state","length","pop","setState","code","getImageCode","bind","getSwatches","data","this","console","log","map","color","id","key","style","background","width","marginTop","borderRadius","height","display","justifyContent","alignItems","className","paddingTop","src","alt","extensions","dims","minWidth","maxWidth","minHeight","maxHeight","onChange","base64","onError","errMsg","alert","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAoGeA,E,kDA9FX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAuBVC,UAAY,SAAAC,GACZ,GAAiC,IAA9B,EAAKC,MAAMD,OAAOE,OACjB,KAAM,EAAKD,MAAMD,OAAOE,OAAS,GAC7B,EAAKD,MAAMD,OAAOG,MAI1B,EAAKC,UAAS,SAAAH,GAAK,MAAK,CAAED,OAAO,GAAD,mBAAMC,EAAMD,QAAZ,YAAuBA,SA7BnD,EAAKC,MAAO,CACRI,KAAO,sBACPL,OAAS,IAGb,EAAKM,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKR,UAAY,EAAKA,UAAUQ,KAAf,gBATH,E,gDAYlB,SAAaE,GACa,MAAnBC,KAAKT,MAAMI,MACVK,KAAKN,SAAS,CACVC,KAAM,OAIdK,KAAKN,SAAS,CACVC,KAAMI,M,yBAcd,SAAYT,GAmBR,OAlBAW,QAAQC,IAAIZ,GACIA,EAAOa,KAAI,SAACC,EAAOC,GAAR,OACvB,yBACAC,IAAKD,EACLE,MAAO,CACHC,WAAYJ,EACZK,MAAO,IACPC,UAAU,EACVC,aAAa,EACbC,OAAQ,GACRC,QAAQ,OACRC,eAAe,SACfC,WAAW,WAEf,uBAAGR,MAAO,CAACH,MAAO,UAAWA,S,oBAOrC,WAAS,IAAD,OAEJ,OACI,yBAAKY,UAAU,aACX,wBAAIT,MAAO,CAACU,WAAW,IAAvB,2BAEA,yBAAKD,UAAU,YACX,yBAAKA,UAAU,wBAEX,yBAAKX,GAAG,eACJ,kBAAC,IAAD,CAAgBhB,UAAWW,KAAKX,WAC/B,yBAAMgB,GAAG,QAAQa,IAAKlB,KAAKT,MAAMI,KAAMwB,IAAI,kBAIhD,kBAAC,cAAD,CACIC,WAAY,CAAC,MAAO,OAAQ,OAC5BC,KAAM,CAACC,SAAU,IAAKC,SAAU,IAAMC,UAAW,IAAKC,UAAW,KACjEC,SAAU,SAAAC,GAAM,OAAK,EAAK/B,aAAa+B,IACvCC,QAAS,SAAAC,GAAM,OAAKC,MAAMD,KAE1B,4BAAQxB,GAAG,OAAX,2BAMR,yBAAKW,UAAU,4BACVhB,KAAKF,YAAYE,KAAKT,MAAMD,e,GArF7ByC,IAAMC,W,OCQfC,MARf,WACE,OACE,yBAAKjB,UAAU,OACb,kBAAC,EAAD,QCISkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d19e50f8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { ImagePicker } from 'react-file-picker';\r\nimport { ColorExtractor } from 'react-color-extractor'\r\n\r\n\r\nclass DemoClass extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state= {\r\n            code : \"asserts/peacock.jpg\",\r\n            colors : []\r\n        }\r\n\r\n        this.getImageCode = this.getImageCode.bind(this);\r\n        this.getSwatches = this.getSwatches.bind(this);\r\n        this.getColors = this.getColors.bind(this);\r\n    }\r\n\r\n    getImageCode(data){\r\n        if(this.state.code != null){\r\n            this.setState({\r\n                code: null\r\n            })\r\n        }\r\n\r\n        this.setState({\r\n            code: data,\r\n        })\r\n    }\r\n\r\n    getColors = colors =>{\r\n    if(this.state.colors.length !==  0){\r\n        while(this.state.colors.length > 0){\r\n            this.state.colors.pop();\r\n        }\r\n    }\r\n\r\n    this.setState(state => ({ colors: [...state.colors, ...colors] }))\r\n    }\r\n\r\n    getSwatches(colors){\r\n        console.log(colors);\r\n        const swatchs = colors.map((color, id) =>(\r\n            <div \r\n            key={id}\r\n            style={{\r\n                background: color,\r\n                width: 100,\r\n                marginTop:2,\r\n                borderRadius:2,\r\n                height: 50,\r\n                display:\"flex\",\r\n                justifyContent:\"center\",\r\n                alignItems:\"center\"\r\n            }}>\r\n            <p style={{color: \"white\"}}>{color}</p>\r\n            </div>\r\n        ))\r\n\r\n        return swatchs;\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div className=\"container\">\r\n                <h5 style={{paddingTop:5}}>Color Picker From Image</h5>\r\n\r\n                <div className=\"row mt-4\">\r\n                    <div className=\"col-9  image-section\">\r\n                        \r\n                        <div id=\"image-cover\">\r\n                            <ColorExtractor getColors={this.getColors} >\r\n                             <img  id=\"image\" src={this.state.code} alt=\"color_Image\"/>\r\n                             </ColorExtractor>\r\n                        </div>\r\n                        \r\n                        <ImagePicker\r\n                            extensions={['jpg', 'jpeg', 'png']}\r\n                            dims={{minWidth: 100, maxWidth: 8000, minHeight: 100, maxHeight: 5000}}\r\n                            onChange={base64 => (this.getImageCode(base64))}\r\n                            onError={errMsg => (alert(errMsg)) }\r\n                            >\r\n                            <button id=\"btn\">\r\n                            Click to upload image\r\n                            </button>\r\n                        </ImagePicker>\r\n                    </div>\r\n                   \r\n                    <div className=\"col-2 ml-2 color-section\">\r\n                        {this.getSwatches(this.state.colors)}\r\n                    </div>\r\n\r\n                </div>              \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default DemoClass;","import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport DemoClass from './classComponent';\nimport './style.css';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <DemoClass />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}